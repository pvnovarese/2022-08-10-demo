# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/
version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "build"
  - "test"
  - "promote"

steps:
  clone:
    title: "Cloning Repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "${{CF_BRANCH}}"
    git: "github"
    stage: "build"

  build:
    title: "Building Docker Image"
    type: "build"
    image_name: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    working_directory: "${{clone}}"
    tag: "cf-dev"
    dockerfile: "Dockerfile"
    stage: "build"

  test:
    title: "Scan with Anchore Enterprise"
    #image: quay.io/codefreshplugins/anchore-plugin:latest 
    image: docker.io/pvnovarese/anchore-tools:main
    environment:
      - ANCHORE_IMAGE=${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}:cf-dev
     # uncomment the following line if you want to break the pipeline for policy violation
     # - ANCHORE_FAIL_ON_POLICY=true
    commands:
      - anchorectl image add --no-auto-subscribe --force --wait ${ANCHORE_IMAGE} --annotation build_tool=codefresh --annotation build_id=${{CF_SHORT_REVISION}}
      # uncomment next command to gate on policy eval
      # - anchore-cli evaluate check ${ANCHORE_IMAGE}
      # - if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchorectl image check --fail-based-on-results --detail ${ANCHORE_IMAGE} ; fi
    stage: "test"

  promote:
    title: "Rebuild and Promote Docker Image"
    type: "build"
    image_name: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    working_directory: "${{clone}}"
    tag: "cf-${{CF_BRANCH}}"
    dockerfile: "Dockerfile"
    stage: "promote"

  queue:
    title: "Add Promoted Image to Anchore Queue"
    #image: quay.io/codefreshplugins/anchore-plugin:latest 
    image: docker.io/pvnovarese/anchore-tools:main
    environment:
      - ANCHORE_IMAGE=docker.io/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}:cf-${{CF_BRANCH}}
    commands:
      ### if you don't want to mess with subscriptions then you don't need to use --wait
      - anchorectl image add --no-auto-subscribe --force ${ANCHORE_IMAGE} --annotation build_tool=codefresh --annotation build_id=${{CF_SHORT_REVISION}}
      ### if you do want to activate subscriptions, use this version with --force
      #- anchorectl image add --no-auto-subscribe --force --wait ${ANCHORE_IMAGE} --annotation build_tool=codefresh --annotation build_id=${{CF_SHORT_REVISION}}
      ### actual commands to activate subscriptions
      #- anchorectl -o json subscription list -k ${ANCHORE_IMAGE} | jq -r '.[] | select (.subscriptionType == "policy_eval") | .subscriptionId' | xargs anchorectl subscription activate
      #- anchorectl -o json subscription list -k ${ANCHORE_IMAGE} | jq -r '.[] | select (.subscriptionType == "vuln_update") | .subscriptionId' | xargs anchorectl subscription activate
    stage: "promote"
