# This workflow checks out code, builds an image, performs a container image
# scan, evaluates the image, and promotes it if it passes.

name: Anchore Weekly

on: 
  #push:
  #  branches:
  #    - main
  #schedule:
  #  - cron: '52 23 * * 5'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Manual Build'  
        
env:
  ANCHORE_CLI_USER: ${{ secrets.ANCHORE_CLI_USER }}
  ANCHORE_CLI_PASS: ${{ secrets.ANCHORE_CLI_PASS }}
  ANCHORE_CLI_URL: ${{ secrets.ANCHORE_CLI_URL }}
  IMAGE_REGISTRY: ghcr.io
  IMAGE_TAG: weekly
  
  
jobs:

  Build-Push:

    runs-on: ubuntu-latest
    
    steps:

    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_ENV

    - name: Checkout Code
      uses: actions/checkout@v2      

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Image
      run: |
        docker build . --file Dockerfile --tag ${IMAGE}

    - name: Scan Image
      uses: anchore/scan-action@v3
      id: scan
      with:
        image: ${{ env.IMAGE }}
        fail-build: false
        severity-cutoff: critical
        acs-report-enable: true
        
    - name: Upload Anchore Scan SARIF Report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Login to Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${IMAGE_REGISTRY} -u ${GITHUB_ACTOR} --password-stdin

    - name: Push Docker Image
      run: |
        docker push ${IMAGE}
        
    - name: Archive Dockerfile
      uses: actions/upload-artifact@v2
      with:
        name: Dockerfile
        path: Dockerfile
        retention-days: 2

  Scan-Analyze:
    needs: Build-Push
    runs-on: ubuntu-latest
    
    steps:
    
    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_ENV
    
    - name: Download Dockerfile Artifact 
      uses: actions/download-artifact@v2
      with:
        name: Dockerfile
        
    - name: Install anchore-cli
      run: |
        sudo apt-get install python3-pip
        pip install anchorecli
        export PATH="$HOME/.local/bin/:$PATH"
        
    - name: Verify Anchore Ready and Reachable
      run: |
        anchore-cli --debug system status 
        
    - name: Add to Enterprise Queue
      run: | 
        anchore-cli image add --noautosubscribe --dockerfile ./Dockerfile ${IMAGE} --annotation actor=${GITHUB_ACTOR}
        
    ### don't really need to wait if you're not going to activate subs afterwards
    #
    #- name: Wait for Enterprise Analysis
    #  run: |
    #    anchore-cli image wait ${IMAGE}
        
    ### uncomment these if you want to activate policy/vuln updates
    #
    #- name: Activate Policy and Vulnerability Subscriptions
    #  run: |
    #    anchore-cli subscription activate policy_eval ${IMAGE}
    #    anchore-cli subscription activate vuln_update ${IMAGE}
