# This workflow is specifically for setting up a demo for drift detection
# in anchore enterprise.  Don't use this for other purposes.

name: Drift Detection Demo

on: 
  #schedule:
  #  - cron: '52 23 * * 5'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Manual Build'  

env:
  ANCHORE_CLI_USER: ${{ secrets.ANCHORE_CLI_USER }}
  ANCHORE_CLI_PASS: ${{ secrets.ANCHORE_CLI_PASS }}
  ANCHORE_CLI_URL: ${{ secrets.ANCHORE_CLI_URL }}
  IMAGE_REGISTRY: ghcr.io

jobs:

  Build-Push:
    runs-on: ubuntu-latest
    steps:
    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" >> $GITHUB_ENV
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Login to Image Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${IMAGE_REGISTRY} -u ${GITHUB_ACTOR} --password-stdin
    - name: Install CLI Tools
      run: |
        sudo apt-get install python3-pip
        pip install anchorecli
        export PATH="$HOME/.local/bin/:$PATH"
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
    - name: Build Baseline Docker Image
      run: |
        docker build . --file .drift-demo/Dockerfile-baseline --tag ${IMAGE}
    - name: Push Baseline Docker Image
      run: |
        docker push ${IMAGE}
    - name: Verify Anchore Ready and Reachable
      run: |
        anchore-cli system status 
    - name: Add Baseline Image to Enterprise Queue
      run: | 
        anchore-cli image add --noautosubscribe --dockerfile ./Dockerfile ${IMAGE} --annotation build=baseline --annotation actor=${GITHUB_ACTOR}
    - name: Build Drifted Docker Image
      run: |
        docker build . --file Dockerfile --tag ${IMAGE}
    - name: Generate SBOM 
      run: |
        syft -o spdx-json docker:${IMAGE} > sbom.spdx.json
    - name: Push Drifted Docker Image
      run: |
        docker push ${IMAGE}
    - name: Wait for Baseline Image Analysis
      run: |
        anchore-cli image wait ${IMAGE}
        # I check this after the build/push of the drifted image just to save time, otherwise
        # we would just block while baseline scans even though we could be doing other stuff
    - name: Add Drifted Image to Enterprise Queue
      run: | 
        anchore-cli image add --noautosubscribe --dockerfile ./Dockerfile ${IMAGE} --annotation build=drifted --annotation actor=${GITHUB_ACTOR}
    - name: Wait for Drifted Image Analysis
      run: |
        anchore-cli image wait ${IMAGE}
    - name: Activate Policy and Vulnerability Subscriptions plus Alerts
      run: |
        anchore-cli subscription activate policy_eval ${IMAGE}
        anchore-cli subscription activate vuln_update ${IMAGE}
        anchore-cli subscription activate alerts ${IMAGE}
    - name: Archive SBOM
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: sbom
        path: sbom.spdx.json
        retention-days: 14

